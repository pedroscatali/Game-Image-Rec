aaa


def img_compare(self, template):
        
        # get an updated image of the game
        screenshot = self.win_capture()
        color1 = np.uint8([[[50, 31, 161]]])
        color = np.uint8([[[253, 242, 246]]])
        mask = cv.inRange(screenshot, color1, color)
        res = cv.bitwise_and(screenshot,screenshot, mask=mask)
        

        haystack_img = cv.imread(template, cv.IMREAD_COLOR)
        haystack_img = np.uint8(haystack_img)
        result1 = cv.matchTemplate(res, haystack_img,cv.TM_CCOEFF_NORMED)

        
        min_val, max_val, min_loc, max_loc = cv.minMaxLoc(result1)
        print(max_val)
        threshold = 0.4
        if max_val > threshold:
            needle_w = haystack_img.shape[1]
            needle_h = haystack_img.shape[0]
            top_left = max_loc
            bottom_right= (top_left[0] + needle_w,top_left[1] + needle_h)
            pos = (1,int((bottom_right[0]+max_loc[0])/2),int((bottom_right[1]+max_loc[1])/2))
            
            return pos
        else:
            pos = (0,0,0)
            
            return pos
